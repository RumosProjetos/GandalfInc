// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.DataAccessLayer;

namespace Projeto.DataAccessLayer.Migrations
{
    [DbContext(typeof(ProjetoDBContext))]
    [Migration("20211125213416_MigracaoInicial")]
    partial class MigracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Pessoas.Cliente", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroFiscal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Pessoas.Fornecedor", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroFiscal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Pessoas.Loja", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NomeResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFiscal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Produtos.CategoriaProduto", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Identificador");

                    b.ToTable("CategoriaProdutos");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Produtos.Produto", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoriaProdutoIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetalheVendaId")
                        .HasColumnType("int");

                    b.Property<int?>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FornecedorIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenciaInternacionalProduto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.HasIndex("CategoriaProdutoIdentificador");

                    b.HasIndex("DetalheVendaId");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("FornecedorIdentificador");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificador");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.DetalheVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("DetalheVendas");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.PontoDeVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LojaIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LojaIdentificador");

                    b.ToTable("PontoDeVendas");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.Venda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHoraVenda")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetalheVendaId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroSerie")
                        .HasColumnType("int");

                    b.Property<Guid?>("PontoDeVendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VendedorIdentificador")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteIdentificador");

                    b.HasIndex("DetalheVendaId");

                    b.HasIndex("PontoDeVendaId");

                    b.HasIndex("VendedorIdentificador");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Produtos.Produto", b =>
                {
                    b.HasOne("Projeto.DataAccessLayer.Entidades.Produtos.CategoriaProduto", "CategoriaProduto")
                        .WithMany()
                        .HasForeignKey("CategoriaProdutoIdentificador");

                    b.HasOne("Projeto.DataAccessLayer.Faturacao.DetalheVenda", null)
                        .WithMany("Produtos")
                        .HasForeignKey("DetalheVendaId");

                    b.HasOne("Projeto.DataAccessLayer.Faturacao.Estoque", null)
                        .WithMany("ProdutosParaVenda")
                        .HasForeignKey("EstoqueId");

                    b.HasOne("Projeto.DataAccessLayer.Entidades.Pessoas.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorIdentificador");

                    b.Navigation("CategoriaProduto");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.PontoDeVenda", b =>
                {
                    b.HasOne("Projeto.DataAccessLayer.Entidades.Pessoas.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaIdentificador");

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.Venda", b =>
                {
                    b.HasOne("Projeto.DataAccessLayer.Entidades.Pessoas.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("ClienteIdentificador");

                    b.HasOne("Projeto.DataAccessLayer.Faturacao.DetalheVenda", "DetalheVenda")
                        .WithMany()
                        .HasForeignKey("DetalheVendaId");

                    b.HasOne("Projeto.DataAccessLayer.Faturacao.PontoDeVenda", "PontoDeVenda")
                        .WithMany()
                        .HasForeignKey("PontoDeVendaId");

                    b.HasOne("Projeto.DataAccessLayer.Entidades.Usuario", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorIdentificador");

                    b.Navigation("Cliente");

                    b.Navigation("DetalheVenda");

                    b.Navigation("PontoDeVenda");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Entidades.Pessoas.Cliente", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.DetalheVenda", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Projeto.DataAccessLayer.Faturacao.Estoque", b =>
                {
                    b.Navigation("ProdutosParaVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
